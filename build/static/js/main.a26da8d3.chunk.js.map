{"version":3,"sources":["firebase.js","components/Home.js","components/Post.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Home","state","posts","title","onChange","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","newid","uuid","db","ref","concat","set","body","then","res","props","history","push","catch","err","console","log","_this2","this","on","snapshot","forEach","childSnapshot","objectSpread","val","key","react_default","a","createElement","className","Form","InputGroup","Control","type","placeholder","Append","Button","variant","map","post","react_router_dom","to","Component","Post","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","postFBRef","titleRef","current","bodyRef","React","createRef","match","params","postId","mdBody","Fragment","rows","react_markdown_default","source","App","react_router","exact","path","component","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a26da8d3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/database'\n\nconst firebaseConfig = {\n      apiKey: \"AIzaSyD451hLDnk-yVkungcEgp55q72-64MvyI8\",\n      authDomain: \"markdow-94130.firebaseapp.com\",\n      databaseURL: \"https://markdow-94130.firebaseio.com\",\n      projectId: \"markdow-94130\",\n      storageBucket: \"\",\n      messagingSenderId: \"153681970224\",\n      appId: \"1:153681970224:web:0b2038a214d25139\"\n    }\n\n    firebase.initializeApp(firebaseConfig)\n\n    export default firebase.database()","import React, { Component } from 'react'\nimport db from '../firebase'\nimport { Link } from 'react-router-dom'\nimport uuid from 'uuid/v4'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\n\nclass Home extends Component {\n      state = { \n            posts: [  ],\n            title: ''\n       }\n\n      componentDidMount() {\n            db.ref( '/posts' ).on( 'value', ( snapshot ) => { \n                  let posts = []\n                  snapshot.forEach( ( childSnapshot ) => { \n                        posts.push( { ...childSnapshot.val(), key: childSnapshot.key } )\n                   }  )\n                  this.setState( { posts } ) \n             } )\n      }\n\n      onChange = ( e ) => { \n            this.setState( {\n                  [ e.target.name ]: e.target.value\n            } )\n       }\n\n      onSubmit = ( e ) => { \n            e.preventDefault()\n            const newid = uuid()\n            if ( this.state.title === \"\" ) return;\n            db.ref( `post/${ newid }` ).set( { \n                  title: this.state.title,\n                  body: ''\n             } ).then( res => { \n                   this.props.history.push( `/post/${ newid }` )\n              } ).catch( err => console.log( err ) )\n       } \n\n      render() { \n            console.log(this.state.posts)\n            return ( \n                  <div>\n                        <h1 className='mt-4 mb-4 text-center'>Create or edit a post</h1>\n                        <Form onSubmit={ this.onSubmit }>\n                              <InputGroup className='mb-3'>\n                                    <Form.Control type='text' name='title' placeholder='Create a post...' value={ this.state.title } onChange={ this.onChange } />\n                                    <InputGroup.Append>\n                                          <Button variant='success' type='submit'>\n                                                Create\n                                          </Button>\n                                    </InputGroup.Append>\n                              </InputGroup>\n                        </Form>\n                        <div className='text-center'>\n                              { this.state.posts.map(  post  => ( \n                                    <div className='my-4' key={ post.key }>\n                                          <Link to={ `/post/${ post.key }` } className='post-link' >\n                                                <h2>{ post.title }</h2>\n                                                <hr />\n                                          </Link>\n                                    </div>\n                               ) ) }\n                        </div>\n                  </div>\n             )\n      }\n}\n \nexport default Home","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport db from '../firebase'\nimport ReactMarkdown from 'react-markdown'\n\n\nexport default class Post extends Component {\n      constructor( props ){ \n            super( props )\n\n            this.titleRef = React.createRef()\n            this.bodyRef = React.createRef()\n            this.postFBRef = db.ref( `posts/${ this.props.match.params.postId }` )\n            this.state = { \n                  mdBody: ''\n             } \n       }\n\n      componentDidMount() {\n            this.postFBRef.on( 'value',  snapshot  => { \n                  if( !snapshot.val() ) return;\n                  this.titleRef.current && ( this.titleRef.current.value = snapshot.val().title )\n                  this.bodyRef.current && ( this.bodyRef.current.value = snapshot.val().body )\n                  this.setState( { \n                        mdBody: snapshot.val().body\n                   } )\n             } )\n      } \n\n      onChange = () => { \n            this.postFBRef.set( { \n                  title: this.titleRef.current.value,\n                  body: this.bodyRef.current.value\n             } ).then( res  => console.log( res ) )\n                .catch( err  => console.log( err ) )  \n       }\n\n      render() { \n            return ( \n                  <React.Fragment>\n                        <div className='row'>\n                              <div className='col col-sm-12'>\n                                    <Link to='/'>Home</Link>\n                              </div>\n                              <div className='col col-sm-12'>\n                                    <input className='post-title-input' ref={ this.titleRef } type='text' placeholder='Title' onChange={ this.onChange } />\n                              </div>\n                        </div>\n                        <div className='row'>\n                              <div className='col col-sm-6'>\n                                    <textarea className='form-control' placeholder='Post body...' ref={ this.bodyRef } type='text' onChange={ this.onChange } rows={ 30 } />\n                              </div>\n                              <div className='col col-sm-6'>\n                                    \n                                    <ReactMarkdown source={ this.state.mdBody } className='markdown-preview' />\n                              </div>\n                        </div>\n                        \n                  </React.Fragment>\n             )\n      }\n}\n \n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport Post from './components/Post'\n\nexport default class App extends Component {\n \n\n    render(){\n      return(\n          <div className='container'>\n             <Router>\n               <Switch>\n                 <Route exact path='/' component={ Home } />\n                 <Route exact path='/post/:postId' component={ Post } />\n               </Switch>\n             </Router>\n          </div>\n      ) \n    }\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport './style.css'\n\nrender(\n    <App />,\n    document.getElementById('app')\n)"],"sourceRoot":""}